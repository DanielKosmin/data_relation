buildscript {
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.25.0'
	id 'checkstyle'
}

group = 'com.kosmin.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// lombok
	implementation 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	// db dependencies
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtimeOnly 'org.postgresql:postgresql'
	// csv processing
	implementation 'com.opencsv:opencsv:5.9'
	// jakarta validator
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	implementation 'jakarta.el:jakarta.el-api:6.0.1'
	// aspect
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.aspectj:aspectjweaver'
	// test dependencies
	testImplementation 'org.awaitility:awaitility:4.2.2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
}

spotless {
	java {
		googleJavaFormat()
	}
}

checkstyle {
	toolVersion = '10.12.0' // Set Checkstyle version
	configFile = file("$rootDir/src/main/resources/checkstyle.xml")
}

copy {
	from new File(rootProject.rootDir, 'scripts/pre-commit')
	into new File(rootProject.rootDir, '.git/hooks')
	fileMode 0777
}

test {
	useJUnitPlatform()
}

tasks.register("unitTest", Test) {
	useJUnitPlatform {
		excludeTags "int"
	}
}
